{"version":3,"sources":["constants.ts","store/slices/navigation.ts","api/index.ts","api/schedule.ts","store/slices/schedule.ts","store/rootReducer.ts","store/index.ts","panels/main/index.tsx","components/LessonRow/index.tsx","panels/schedule/index.tsx","utils/index.ts","panels/search/index.tsx","App.tsx","index.tsx"],"names":["BASE_URL","process","SCHEDULE_PANEL","MAIN_PANEL","SEARCH_PANEL","initialState","activePanel","history","navigationSlice","createSlice","name","reducers","setActivePanel","state","action","payload","actions","schedule","getSchedule","a","univer","tail","url","join","fetch","res","json","searchSchedule","q","requestSchedule","createAsyncThunk","thunkAPI","href","getState","scheduleHistory","find","id","record","isUniq","api","data","requestSearchSchedule","scheduleSlice","isLoading","error","scheduleHistoryHrefs","isSearchLoading","searchError","searchedSchedules","scheduleHistoryBack","pop","currentScheduleHref","length","currentSchedule","clearScheduleHistory","extraReducers","builder","addCase","pending","rejected","message","meta","arg","fulfilled","push","rootReducer","combineReducers","navigation","store","configureStore","reducer","MainPanel","dispatch","useDispatch","style","paddingTop","mode","header","subheader","background","backgroundColor","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","marginTop","width","value","after","onClick","LessonRow","lesson","onGoToSchedule","className","time","map","i","type","typeTitle","place","subject","fromWhoms","fromWhom","title","DAYS","WEEKS","SchedulePanel","content","useSelector","s","React","useState","currentDay","setCurrentDay","currentWeek","setCurrentWeek","goToMain","setIsActionOpened","goToSchedule","fw","slice","cardRef","useRef","stretched","ref","height","slideIndex","onChange","d","_","lessons","day","week","filter","inDay","inWeek","getLessonsInDay","icon","color","j","selected","disabled","before","marginRight","console","log","separator","left","SearchPanel","setQ","debQ","setDebQ","useEffect","timeout","window","setTimeout","clearTimeout","vertical","filled","e","target","App","document","body","setAttribute","isWebView","bridge","send","subscribe","detail","scheme","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f198e965.chunk.js","sourcesContent":["export const BASE_URL = process.env.REACT_APP_BASE_URL\n\nexport const SCHEDULE_PANEL = 'schedule'\nexport const MAIN_PANEL = 'main'\nexport const SEARCH_PANEL = 'search'","import { createSlice } from \"@reduxjs/toolkit\";\nimport { MAIN_PANEL, SCHEDULE_PANEL } from \"../../constants\";\nimport { PanelType } from \"../../types\";\n\ntype NavigationState = {\n  activePanel: PanelType\n  history: PanelType[]\n}\n\nconst initialState: NavigationState = {\n  // activePanel: SCHEDULE_PANEL,\n  activePanel: MAIN_PANEL,\n  history: [SCHEDULE_PANEL],\n}\n\nconst navigationSlice = createSlice({\n  name: 'navigation',\n  initialState,\n  reducers: {\n    setActivePanel(state, action)\n    {\n      state.activePanel = action.payload\n    },\n  },\n})\n\nexport const { setActivePanel } = navigationSlice.actions\nexport default navigationSlice.reducer","import schedule from './schedule'\n\nexport default {\n  schedule,\n}","import { BASE_URL } from \"../constants\"\nimport { HrefTitle, Schedule } from \"../types\"\n\nconst getSchedule = async ({\n  univer,\n  tail,\n} : {\n  univer: string,\n  tail: string,\n}): Promise<Schedule> => {\n  const url = [ BASE_URL, 'schedule', univer, tail, ].join('/')\n  const res = await fetch(url)\n  return await res.json()\n}\n\nconst searchSchedule = async ({\n  univer,\n  q,\n} : {\n  univer: string,\n  q: string,\n}) : Promise<HrefTitle[]> => {\n  const url = [ BASE_URL, 'schedule/search', univer, q, ].join('/')\n  const res = await fetch(url)\n  return await res.json()\n}\n\nexport default {\n  getSchedule,\n  searchSchedule,\n}","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\nimport { HrefTitle, Schedule } from \"../../types\"\nimport api from \"../../api\"\nimport { RootState } from \"../rootReducer\"\n\ntype ScheduleHistoryRecord = {\n    id: string,\n    data: Schedule\n  }\n\ntype ScheduleState = {\n  isLoading: boolean\n  error: {\n    message: string,\n    payload: any,\n  } | null\n  schedule: Schedule | null\n  scheduleHistory: ScheduleHistoryRecord[]\n  scheduleHistoryHrefs: string[]\n\n  isSearchLoading: boolean\n  searchError: {\n    message: string,\n    payload: any,\n  } | null\n  searchedSchedules: HrefTitle[]\n}\n\nexport const requestSchedule = createAsyncThunk(\n  'schedule/request',\n  async ({ univer, tail: href }: {\n    univer: string,\n    tail: string,\n  }, thunkAPI): Promise<{record: ScheduleHistoryRecord, isUniq: boolean }> => {\n    const state = (thunkAPI.getState() as RootState)\n    const scheduleHistory = state.schedule.scheduleHistory\n    const schedule = scheduleHistory.find(schedule => schedule.id === href)\n\n    if(schedule)\n    {\n      return { record: schedule, isUniq: false}\n    }\n    else\n    {\n      const schedule = await api.schedule.getSchedule({ univer, tail: href })\n      return {\n        record: { id: href, data: schedule },\n        isUniq: true,\n      }\n    }\n  }\n)\n\nexport const requestSearchSchedule = createAsyncThunk(\n  'schedule/search/request',\n  api.schedule.searchSchedule\n)\n\nconst initialState: ScheduleState = {\n  isLoading: false,\n  error: null,\n  schedule: null,\n  scheduleHistory: [],\n  scheduleHistoryHrefs: [],\n\n  isSearchLoading: false,\n  searchError: null,\n  searchedSchedules: [],\n}\n\nconst scheduleSlice = createSlice({\n  name: 'schedule',\n  initialState,\n  reducers: {\n    scheduleHistoryBack(state)\n    {\n      state.scheduleHistoryHrefs.pop()\n      const currentScheduleHref = state.scheduleHistoryHrefs[state.scheduleHistoryHrefs.length - 1]\n      if(currentScheduleHref)\n      {\n        const currentSchedule = state.scheduleHistory.find(schedule => schedule.id === currentScheduleHref)!\n        state.schedule = currentSchedule.data\n      }\n      else\n      {\n        state.schedule = null\n      }\n    },\n    clearScheduleHistory(state)\n    {\n      state.scheduleHistoryHrefs = []\n      state.schedule = null\n    },\n  },\n  extraReducers(builder)\n  {\n    builder\n      .addCase(requestSchedule.pending, (state,action) => {\n        state.isLoading = true\n        state.error = null\n      })\n      .addCase(requestSchedule.rejected, (state,action) => {\n        state.isLoading = false\n        state.error = {\n          message: 'Ошибка при запросе расписания :(',\n          payload: action.meta.arg\n        }\n      })\n      .addCase(requestSchedule.fulfilled, (state,action) => {\n        state.isLoading = false\n        state.error = null\n\n        const { isUniq, record } = action.payload\n\n        if(isUniq)\n        {\n          state.scheduleHistory.push(record)\n        }\n\n        state.scheduleHistoryHrefs.push(record.id)\n        state.schedule = record.data\n      })\n\n      .addCase(requestSearchSchedule.pending, (state,action) => {\n        state.isSearchLoading = true\n        state.searchError = null\n      })\n      .addCase(requestSearchSchedule.rejected, (state,action) => {\n        state.isSearchLoading = false\n        state.searchError = {\n          message: 'Ошибка при запросе расписания :(',\n          payload: action.meta.arg\n        }\n      })\n      .addCase(requestSearchSchedule.fulfilled, (state,action) => {\n        state.isSearchLoading = false\n        state.searchError = null\n        state.searchedSchedules = action.payload\n      })\n  },\n})\n\nexport const { scheduleHistoryBack, clearScheduleHistory, } = scheduleSlice.actions\nexport default scheduleSlice.reducer","import { combineReducers } from \"@reduxjs/toolkit\"\n\nimport navigation from './slices/navigation'\nimport schedule from './slices/schedule'\n\nconst rootReducer = combineReducers({\n  navigation,\n  schedule,\n})\n\nexport type RootState = ReturnType<typeof rootReducer>\nexport default rootReducer","import { configureStore } from \"@reduxjs/toolkit\"\n\nimport rootReducer from './rootReducer'\n\nconst store = configureStore({ reducer : rootReducer })\n\nexport default store","import React from 'react'\nimport { Banner, Card, Cell, Div, InfoRow, Panel, Progress } from '@vkontakte/vkui'\nimport { Icon28Search, Icon28SettingsOutline } from '@vkontakte/icons';\nimport { PanelProps } from '../../types'\nimport { useDispatch } from 'react-redux';\nimport { setActivePanel } from '../../store/slices/navigation';\nimport { SEARCH_PANEL } from '../../constants';\n\nconst MainPanel: React.FC<PanelProps> = ({\n  id,\n}) => {\n  const dispatch = useDispatch()\n\n  const goToSearchSchedule = () => {\n    dispatch(setActivePanel(SEARCH_PANEL))\n  }\n\n  return (\n    <Panel id={id} style={{paddingTop: 64}}>\n      <Banner\n        mode=\"image\"\n        header={true && 'Числитель'}\n        subheader=\"До конца семестра\"\n        background={\n          <div\n            style={{\n              backgroundColor: '#65c063',\n              backgroundImage: 'url(https://sun9-59.userapi.com/7J6qHkTa_P8VKRTO5gkh6MizcCEefz04Y0gDmA/y6dSjdtPU4U.jpg)',\n              backgroundPosition: 'right bottom',\n              backgroundSize: 320,\n              backgroundRepeat: 'no-repeat',\n            }}\n          />\n        }\n        actions={\n          // <Button\n          //   disabled\n          //   mode=\"overlay_primary\"\n          // >Подробнее</Button>\n          <InfoRow style={{marginTop:4}} header={`осталось ${5} дн.`}>\n            <Progress\n              style={{width:'70%', marginTop : 8, background : 'gray'}}\n              value={(60 / 100) * 100}\n            />\n          </InfoRow>\n        }\n      />\n\n      <Div>\n        <Card>\n          <Cell\n            after={<Icon28Search/>}\n            onClick={goToSearchSchedule}\n          >Искать расписание</Cell>\n        </Card>\n      </Div>\n      \n      <Div>\n        <Card>\n          <Cell\n            after={<Icon28SettingsOutline/>}\n          >Настройки</Cell>\n        </Card>\n      </Div>\n    </Panel>\n  )\n}\n\nexport default MainPanel","import { Panel } from '@vkontakte/vkui'\nimport React from 'react'\nimport { HrefTitle, Lesson } from '../../types'\nimport './LessonRow.sass'\n\ntype LessonRowProps = {\n  lesson: Lesson\n  onGoToSchedule: (fw: HrefTitle) => void\n}\n\nconst LessonRow: React.FC<LessonRowProps> = ({\n  lesson,\n  onGoToSchedule,\n}) => {\n  return (\n    <div className=\"lesson-row\">\n      <div className=\"lesson-row__time\">\n        {lesson.time.map((time, i) => {\n          return <div\n            key={time}\n            className={`lesson-row__time-item lesson-row__time-item--${i === 0 ? 'start' : 'end'}`}\n          >{time}</div>\n        })}\n      </div>\n      <div className={`lesson-row__body lesson-row__body--${lesson.type}`}>\n        <div className=\"lesson-row__place\">\n          <span className={`lesson-row__type-title--${lesson.type}`}>\n            {lesson.typeTitle}\n          </span>\n          {lesson.place}\n        </div>\n        <div className=\"lesson-row__subject\">\n          {lesson.subject}\n        </div>\n        <div className=\"lesson-row__fromWhoms\">\n          {lesson.fromWhoms.map(fromWhom => {\n            return <div\n              key={fromWhom.href}\n              className=\"lesson-row__fromWhoms-item\"\n              onClick={() => onGoToSchedule(fromWhom)}\n            >{fromWhom.title}</div>\n          })}\n        </div>\n      </div>\n      <div className=\"lesson-row__after\"></div>\n    </div>\n  )\n}\n\nexport default LessonRow","import React from 'react'\nimport { Button, Card, Div, Gallery, Link, Panel, PanelHeader, PanelHeaderBack, Placeholder, SimpleCell, Spinner, Tabs, TabsItem } from '@vkontakte/vkui'\nimport { Icon56GhostOutline, Icon28ArrowUturnLeftOutline, Icon28HomeOutline, Icon28MoreVertical   } from '@vkontakte/icons';\nimport { useDispatch, useSelector } from 'react-redux'\nimport LessonRow from '../../components/LessonRow'\nimport { RootState } from '../../store/rootReducer'\nimport { DayRange, HrefTitle, PanelProps, WeekRange } from '../../types'\nimport { getLessonsInDay } from '../../utils'\nimport './Schedule.sass'\nimport { clearScheduleHistory, requestSchedule, scheduleHistoryBack } from '../../store/slices/schedule';\nimport { setActivePanel } from '../../store/slices/navigation';\nimport { MAIN_PANEL } from '../../constants';\n\nconst DAYS = [\n  { id: 0, title: 'ПН' },\n  { id: 1, title: 'ВТ' },\n  { id: 2, title: 'СР' },\n  { id: 3, title: 'ЧТ' },\n  { id: 4, title: 'ПТ' },\n  { id: 5, title: 'СБ' },\n]\nconst WEEKS = [\n  { id: 0, title: 'Числитель'},\n  { id: 1, title: 'Знаменатель'},\n]\n\nconst SchedulePanel: React.FC<PanelProps> = ({\n  id,\n}) => {\n  const dispatch = useDispatch()\n  const { isLoading, error, schedule, scheduleHistoryHrefs, } = useSelector((s: RootState) => s.schedule)\n\n  const [currentDay, setCurrentDay] = React.useState<DayRange>(0)\n  const [currentWeek, setCurrentWeek] = React.useState<WeekRange>(0)\n\n  const goToMain = () => {\n    dispatch(setActivePanel(MAIN_PANEL))\n    dispatch(clearScheduleHistory())\n  }\n\n  const goBack = () => {\n    if(scheduleHistoryHrefs.length === 1)\n    {\n      goToMain()\n    }\n    else\n    {\n      dispatch(scheduleHistoryBack())\n    }\n  }\n\n  const [isActionsOpened, setIsActionOpened] = React.useState(false)\n  const showActions = () => {\n    console.log()\n    setIsActionOpened(true)\n  }\n\n  const goToSchedule = (fw: HrefTitle) => {\n    dispatch(requestSchedule({\n      univer: 'nsu',\n      tail: fw.href.slice(1), // delete after. href without start '/'. changed in backend !!!\n    }))\n  }\n\n  const cardRef = React.useRef<HTMLDivElement>(null)\n\n  let content\n\n  if(isLoading)\n  {\n    content = <Spinner />\n  }\n  else if(error)\n  {\n    content = <Placeholder\n      stretched\n      action={\n        <Button onClick={() => {\n          dispatch(requestSchedule(error.payload))\n        }}>Повторить</Button>}\n    >{error.message}</Placeholder>\n  }\n  else if(schedule)\n  {\n    content = ( <>      \n      <div className=\"schedule__card\" ref={cardRef}>\n        <Gallery\n          style={{height:'100%'}}\n          slideIndex={currentDay}\n          onChange={d => setCurrentDay(d as DayRange)}\n        >\n          {DAYS.map((_,i) => {\n            const lessons = getLessonsInDay(schedule.lessons, i as DayRange, currentWeek)\n\n            return <Card key={i} className=\"schedule__body\">\n              {lessons.length === 0\n                ? <Placeholder className=\"schedule__empty-placeholder\" icon={<Icon56GhostOutline style={{color:\"teal\"}}/>}>Выходной</Placeholder>\n                : lessons.map((lesson, j) => {\n                    return <LessonRow\n                      key={[i,j].join('-')}\n                      lesson={lesson}\n                      onGoToSchedule={goToSchedule}\n                    />\n                  })}\n            </Card>\n          })}\n        </Gallery>\n      </div>\n\n      <Card style={{marginTop:8}}>\n\n        <Tabs>\n          {WEEKS.map(week => {\n            return <TabsItem\n              key={week.id}\n              selected={week.id === currentWeek}\n              onClick={() => setCurrentWeek(week.id as WeekRange)}\n            >{week.title}</TabsItem>\n          })}\n        </Tabs>\n        <Tabs>\n          {DAYS.map(day => {\n            return <TabsItem\n              key={day.id}\n              selected={day.id === currentDay}\n              onClick={() => setCurrentDay(day.id as DayRange)}\n            >{day.title}</TabsItem>\n          })}\n        </Tabs>\n        <SimpleCell\n          disabled\n          before={<Icon28ArrowUturnLeftOutline onClick={goBack} width={20} style={{marginRight: 12, color:'teal'}}/>}\n          after={<Icon28MoreVertical onClick={showActions} width={20} style={{color:'violet'}}/>}\n        >\n          <Link>{schedule.title}</Link>\n        </SimpleCell>\n      </Card>\n    </>)\n  }\n\n  return (\n    <Panel id={id}>\n      <PanelHeader\n        separator={false}\n        left={\n          <Icon28HomeOutline onClick={goToMain} />\n        }\n      />\n      <Div className=\"schedule__wrapper\">\n        {content}\n      </Div>\n    </Panel>\n  )\n}\n\nexport default SchedulePanel","import { DayRange, Lesson, WeekRange } from \"../types\";\n\nexport const getLessonsInDay = (\n  lessons: Lesson[],\n  day: DayRange,\n  week: WeekRange\n): Lesson[] => {\n  return lessons.filter(lesson => {\n    const inDay = lesson.day === day\n    const inWeek = lesson.week === week || lesson.week === 2\n\n    return inDay && inWeek\n  })\n}","import React, { ChangeEvent } from 'react'\nimport { Button, CellButton, Div, FixedLayout, Panel, PanelHeader, PanelHeaderBack, Placeholder, Search, Spinner } from '@vkontakte/vkui'\nimport { Icon56GhostOutline } from '@vkontakte/icons'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { MAIN_PANEL, SCHEDULE_PANEL } from '../../constants'\nimport { RootState } from '../../store/rootReducer'\nimport { setActivePanel } from '../../store/slices/navigation'\nimport { requestSchedule, requestSearchSchedule } from '../../store/slices/schedule'\nimport { HrefTitle, PanelProps } from '../../types'\n\nconst SearchPanel: React.FC<PanelProps> = ({\n  id,\n}) => {\n  const dispatch = useDispatch()\n  const { isSearchLoading, searchError, searchedSchedules, } = useSelector((s: RootState) => s.schedule)\n\n  const [q, setQ] = React.useState<string>('')\n  const handleQChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setQ(e.target.value)\n  }\n\n  const [debQ, setDebQ] = React.useState(q)\n  React.useEffect(() => {\n    const timeout = window.setTimeout(() => {\n      setDebQ(q)\n    }, 300)\n\n    return () => {\n      window.clearTimeout(timeout)\n    }\n  }, [q])\n\n  React.useEffect(() => {\n    if(debQ)\n    {\n      dispatch(requestSearchSchedule({\n        univer: 'nsu',\n        q: debQ,\n      }))\n    }\n  }, [debQ])\n\n  const goToMainPanel = () => {\n    dispatch(setActivePanel(MAIN_PANEL))\n  }\n\n  const goToSchedule = (schedule: HrefTitle) => {\n    dispatch(requestSchedule({\n      univer: 'nsu',\n      tail: schedule.href,\n    }))\n    dispatch(setActivePanel(SCHEDULE_PANEL))\n  }\n\n  let content\n\n  if(isSearchLoading)\n  {\n    content = <Spinner />\n  }\n  else if(searchError)\n  {\n    content = <Placeholder\n      // action={\n      //   <Button onClick={() => {\n      //     dispatch(requestSchedule(searchError.payload))\n      //   }}>Повторить</Button>\n      // }\n    >{searchError.message}</Placeholder>\n  }\n  else if(searchedSchedules.length === 0)\n  {\n    content = <Placeholder\n      icon={<Icon56GhostOutline style={{color:\"teal\"}} />}\n    >Ничего не найдено</Placeholder>\n  }\n  else\n  {\n    content = searchedSchedules.map((schedule, i) => {\n      return <CellButton\n        key={i}\n        onClick={() => goToSchedule(schedule)}\n      >{schedule.title}</CellButton>\n    })\n  }\n\n  return (\n    <Panel id={id}>\n      <PanelHeader\n        separator={false}\n        left={\n          <PanelHeaderBack onClick={goToMainPanel} />\n        }\n      >Поиск</PanelHeader>\n\n      <FixedLayout style={{paddingTop:24}} vertical=\"top\" filled>\n        <Search\n          after={null}\n          value={q}\n          onChange={handleQChange}\n        />\n      </FixedLayout>\n\n      <Div style={{marginTop:70}}>{content}</Div>\n    </Panel>\n  )\n}\n\nexport default SearchPanel","import { AppRoot, ConfigProvider, View } from '@vkontakte/vkui';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { MAIN_PANEL, SCHEDULE_PANEL, SEARCH_PANEL } from './constants';\nimport MainPanel from './panels/main';\nimport SchedulePanel from './panels/schedule';\nimport SearchPanel from './panels/search';\nimport { RootState } from './store/rootReducer';\n\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch()\n  const { activePanel, history } = useSelector((s: RootState) => s.navigation)\n\n  React.useEffect(() => {\n    document.body.setAttribute('scheme', 'space_gray')\n  },[])\n\n  return (\n    <ConfigProvider isWebView={true}>\n      <AppRoot>\n        <View\n          activePanel={activePanel}\n          history={history}\n        >\n          <MainPanel id={MAIN_PANEL} />\n          <SearchPanel id={SEARCH_PANEL} />\n          <SchedulePanel id={SCHEDULE_PANEL} />\n        </View>\n      </AppRoot>\n    </ConfigProvider>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport bridge from '@vkontakte/vk-bridge'\nimport '@vkontakte/vkui/dist/vkui.css'\n\nimport store from './store'\nimport { Provider } from 'react-redux'\n\nimport './index.sass';\n\nimport App from './App';\n\nbridge.send('VKWebAppInit')\nbridge.subscribe(e => {\n  if(e.detail.type === 'VKWebAppUpdateConfig')\n    document.body.setAttribute('scheme', e.detail.data.scheme)\n})\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}